{"version":3,"sources":["components/Add.js","components/DisplayTable.js","components/Header.js","components/Profile.js","components/DisplayHistory.js","components/PageChoose.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["config","require","Add","_error","ticker","share","price","handle_share","event","setState","Share","target","value","console","log","handle_tickerSymbol","TickerSymbol","test","handle_asp","SharePrice","handle_submit","preventDefault","form_data","state","toUpperCase","Price","Shares","TradeType","axios","post","URL","then","response","catch","error","alert","Row","Form","className","onSubmit","this","FormGroup","Label","for","Input","required","onChange","type","Button","size","block","onClick","Component","DisplayTable","props","handle_buy","handle_delete","handle_sell","handle_change_buy_price","handle_change_buy_count","handle_change_sell","table_data","Table","map","anObjectMapped","index","key","scope","name","id","buy_price","placeholder","buy_count","outline","color","sell_value","Header","useState","isOpen","setIsOpen","Navbar","expand","NavbarBrand","href","icon","faUser","NavbarToggler","faBars","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","credits","Profile","_errors","_isFormValid","fetchData","get","arr","data","forEach","a","prevState","returns","amount","Credit","Name","delete","array","splice","body","put","parseInt","_form_error","DisplayHistory","history","PageChoose","pagelist","currentPage","onPageChoose","handlePageChange","Col","e","length","History","fetchPage","getPageCount","i","Math","ceil","limit","push","totalPage","_isloading","App","path","exact","render","component","to","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbc254d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Form, FormGroup, Label, Input, Row, } from 'reactstrap';\r\nimport axios from 'axios';\r\nconst config = require(\"../config\");\r\n\r\nconst max = 100000;\r\nexport class Add extends Component {\r\n    _error = {\r\n        ticker:'',\r\n        share:'',\r\n        price:''\r\n    }\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            TickerSymbol : \"\",\r\n            SharePrice : \"\",\r\n            Share: \"\",\r\n        }\r\n    }\r\n\r\n    handle_share = (event) => {\r\n        this.setState({\r\n            Share : event.target.value \r\n        })\r\n        console.log(event.target.value)\r\n        if(event.target.value<1 || event.target.value>max){\r\n            this._error.share = 'Share quantity should be more than 0 and less than 100000';\r\n        }\r\n    }\r\n\r\n    handle_tickerSymbol = (event) => {\r\n        this.setState({\r\n            TickerSymbol : event.target.value\r\n        })\r\n        console.log(!(/[a -zA-Z]*/.test(event.target.value)));\r\n        if((/[a -zA-Z]*/.test(event.target.value) === true)){\r\n            this._error.ticker = '';\r\n        }\r\n    }\r\n\r\n    handle_asp = (event) => {\r\n        this.setState({\r\n            SharePrice : event.target.value\r\n        })\r\n        if(event.target.value<1 ||event.target.value>max){\r\n            this._error.price = 'Share Price should be more than 0 and less than 100000';\r\n        }\r\n    }\r\n\r\n    handle_submit = (event) => {\r\n        console.log(this._error)\r\n        if(this._error.share !== '' || this._error.price !== '' || this._error.ticker !== ''){\r\n            alert(this._error.share+'\\n'+this._error.price+'\\n'+this._error.ticker);\r\n            return ;\r\n        }\r\n        event.preventDefault();\r\n        var form_data = {\r\n            TickerSymbol: this.state.TickerSymbol.toUpperCase(),\r\n            Price: this.state.SharePrice,\r\n            Shares: this.state.Share,\r\n            TradeType: 'Buy'\r\n        }\r\n\r\n        axios.post(config.URL + '/api/trade', form_data)\r\n        .then(response => {\r\n            console.log(response)\r\n            // this.props.history.push(`/`)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n        console.log(form_data)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Form className=\"col-md-3 col-sm-8 p-5 col-centered text-left border\" onSubmit={this.handle_submit}>\r\n                    <FormGroup>\r\n                        <Label for=\"TickerSymbol\">Ticker Symbol</Label>\r\n                        <Input required value={this.state.TickerSymbol} onChange={this.handle_tickerSymbol} />\r\n                        <small className=\"text-danger\"></small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"SingleSharePrice\">Single Share Price</Label>\r\n                        <Input type=\"number\" required value={this.state.SharePrice} onChange={this.handle_asp} />\r\n                        <small className=\"text-danger\"></small>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"Shares\">Shares</Label>\r\n                        <Input type=\"number\" required value={this.state.Share} onChange={this.handle_share} />\r\n                        <small className=\"text-danger\"></small>\r\n                    </FormGroup>\r\n                    <Button size=\"sm\" block onClick={this.handle_submit}>Add</Button>\r\n                </Form>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Add\r\n","import React from 'react'\r\nimport { Table, Button, Input } from 'reactstrap'\r\n\r\n\r\nfunction DisplayTable(props) {\r\n    var handle_buy = props.handle_buy,\r\n        handle_delete = props.handle_delete,\r\n        handle_sell = props.handle_sell,\r\n        handle_change_buy_price = props.handle_change_buy_price,\r\n        handle_change_buy_count = props.handle_change_buy_count,\r\n        handle_change_sell = props.handle_change_sell,\r\n        table_data = props.table_data;\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Ticker Symbol</th>\r\n                    <th>Average Buy Price</th>\r\n                    <th>Shares</th>\r\n                    <th>Sell/Buy</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {table_data.map((anObjectMapped, index) => {\r\n                    return (\r\n                        <tr key={index}>\r\n                            <th scope=\"row\">{anObjectMapped.TickerSymbol}</th>\r\n                            <td>{anObjectMapped.Price}</td>\r\n                            <td>{anObjectMapped.Shares}</td>\r\n                            <td className=\"row\">\r\n                                <form className=\"row\" onSubmit={(event) => handle_buy(index, event)}>\r\n                                    <Input type=\"number\" required onChange={(event) => handle_change_buy_price(index, event)} className=\"w-25\" name=\"buy_price\" id=\"buy-price\" value={anObjectMapped.buy_price}  placeholder=\"Price\"/>\r\n                                    <Input type=\"number\" required onChange={(event) => handle_change_buy_count(index, event)} className=\"w-25\" name=\"buy_count\" id=\"buy-count\" value={anObjectMapped.buy_count} placeholder=\"Shares\" />\r\n                                    <Button type=\"submit\" outline color=\"success\">Buy</Button>\r\n                                </form>\r\n                                <form className=\"row\" onSubmit={(event) => handle_sell(index, event)}>\r\n                                    <Input type=\"number\" required onChange={(event) => handle_change_sell(index, event)} className=\"w-25\" name=\"sell\" id=\"dell\" value={anObjectMapped.sell_value} />\r\n                                    <Button type=\"submit\" outline color=\"warning\">Sell</Button>\r\n                                </form>\r\n                                <Button outline color=\"danger\" onClick={() => handle_delete(index)}>Sell All</Button>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default DisplayTable\r\n","import React, {useState} from 'react'\r\nimport {Navbar, NavbarBrand, NavbarToggler, Nav , NavItem, NavbarText, NavLink, Collapse} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Header(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    \r\n    return (\r\n        <Navbar className=\"main_color\" expand=\"md\">\r\n            <NavbarBrand href=\"/\"><FontAwesomeIcon icon={faUser}/></NavbarBrand>\r\n            <NavbarToggler onClick={toggle} className=\"button_color\"><FontAwesomeIcon icon={faBars}/></NavbarToggler>\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"mr-auto\" navbar>\r\n                    <NavItem>\r\n                        <NavLink href=\"/holding\">Holding</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/\">Portfolio</NavLink>\r\n                    </NavItem>\r\n                \r\n                </Nav>\r\n                <NavbarText> Name : {props.name} </NavbarText>\r\n                <NavbarText> -Credits : {props.credits}</NavbarText>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport DisplayTable from \"./DisplayTable\"\r\nimport Header from \"./Header\"\r\nimport axios from \"axios\"\r\n\r\nconst config = require(\"../config\");\r\nconst min_price = 1;\r\nconst max_price = 100000;\r\nconst min_count = 1;\r\nconst max_count = 100000;\r\nconst min_sell_count = 1;\r\n\r\nexport class Profile extends Component {\r\n    _errors = {\r\n        buy_price: \"\",\r\n        buy_count: \"\",\r\n        sell_value : \"\"\r\n    }\r\n\r\n    _isFormValid = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            returns: -1,\r\n            table_data: [],\r\n            name:'',\r\n            credits: 0,\r\n            _form_error:''\r\n        }\r\n    }\r\n\r\n    fetchData = () => {\r\n        console.log(\"Fetching data\")\r\n\r\n        axios.get(config.URL + '/api/portfolio')\r\n            .then(response => {\r\n\r\n                let arr = [...response.data];\r\n\r\n                arr.forEach(a => {\r\n                    a.buy_price = '';\r\n                    a.buy_count = '';\r\n                    a.sell_value = '';\r\n                })\r\n\r\n                this.setState(prevState => ({\r\n                    table_data: arr\r\n                }))\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        axios.get(config.URL + '/api/returns')\r\n            .then(response => {\r\n\r\n                this.setState(prevState => ({\r\n                    returns: response.data.amount\r\n                }))\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get(config.URL + '/api/credits')\r\n            .then(response => {\r\n                this.setState(prevState => ({\r\n                    credits: response.data.Credit,\r\n                    name : response.data.Name\r\n                }))\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handle_delete = (index) => {\r\n        console.log(\"Handle Delete \" + index);\r\n\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n\r\n        var data = this.state.table_data[index];\r\n        data.TradeType = 'Sell';\r\n        axios.delete(config.URL + `/api/trade/`, { data })\r\n            .then(() => {\r\n                this.fetchData();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n\r\n        var array = [...this.state.table_data];\r\n\r\n        array.splice(index, 1);\r\n        this.setState({ table_data: array });\r\n\r\n    }\r\n\r\n    handle_buy = (index, event) => {\r\n        console.log(this._errors)\r\n        if (index === -1) {\r\n            return;\r\n        } else if(this._errors.buy_price !== '' || this._errors.buy_count !== ''){\r\n            alert(this._errors.buy_count +' '+ this._errors.buy_price );\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n\r\n        let data = this.state.table_data[index]\r\n\r\n        let body = {\r\n            TickerSymbol: data.TickerSymbol,\r\n            Price: data.buy_price,\r\n            Shares: data.buy_count,\r\n            TradeType:'Buy',\r\n        }\r\n\r\n        axios.put(config.URL + `/api/trade/`, body)\r\n            .then(() => {\r\n                this.fetchData();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        this.fetchData(); \r\n\r\n    }\r\n\r\n    handle_sell = (index, event) => {\r\n\r\n        if (index === -1) {\r\n            return\r\n        } else if(this._errors.sell_value !== ''){\r\n            alert(this._errors.sell_value);\r\n            return \r\n        }\r\n\r\n        event.preventDefault();\r\n\r\n        let data = this.state.table_data[index]\r\n\r\n\r\n        let body = {\r\n            TickerSymbol: data.TickerSymbol,\r\n            Shares: - data.sell_value,\r\n            TradeType:'Sell'\r\n        }\r\n\r\n        axios.put(config.URL + `/api/trade/`, body)\r\n            .then(() => {\r\n                this.fetchData();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        //this.fetchData();\r\n\r\n    }\r\n\r\n    handle_change_buy_price = (index, event) => {\r\n        var array = [...this.state.table_data];\r\n        if(parseInt(event.target.value) >= min_price && parseInt(event.target.value) <= max_price){\r\n            this._errors.buy_price = '';\r\n        } else {\r\n            this._errors.buy_price = 'Minimum share price should be ' + min_price +\r\n                                        '\\n Maximum share price should be ' + max_price;\r\n        }\r\n        if (index !== -1) {\r\n            array[index].buy_price = event.target.value;\r\n            this.setState({ table_data: array });\r\n        }\r\n    }\r\n\r\n    handle_change_buy_count = (index, event) => {\r\n        console.log(typeof event.target.value)\r\n        if(parseInt(event.target.value) >= min_count && parseInt(event.target.value) <= max_count ){\r\n            this._errors.buy_count = '';\r\n        } else {\r\n            this._errors.buy_count = 'Minimum share count should be ' + min_count +\r\n                                        '\\n Maximum share count should be ' + max_count;\r\n        }\r\n        var array = [...this.state.table_data];\r\n        if (index !== -1) {\r\n            array[index].buy_count = event.target.value;\r\n            this.setState({ table_data: array });\r\n        }\r\n    }\r\n\r\n    handle_change_sell = (index, event) => {\r\n        if(index === -1){\r\n            return \r\n        }\r\n        console.log(\"Handle Change \" + index)\r\n        var array = [...this.state.table_data];\r\n        if(event.target.value >= min_sell_count && event.target.value < array[index].Shares ){\r\n            this._errors.sell_value = '';\r\n        } else {\r\n            this._errors.sell_value = 'Minimum shares to sell should be ' + min_sell_count +\r\n                                        '\\n Maximum shares to sell should be ' + (array[index].Shares - 1);\r\n            console.log(this._errors.sell_value);\r\n        }\r\n        \r\n        array[index].sell_value = event.target.value;\r\n        this.setState({ table_data: array });\r\n        \r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header name={this.state.name}credits={this.state.credits}></Header>\r\n                <div className=\"m-5\">\r\n                    <Button className=\"float-left mb-3\" href=\"/Add\">Add</Button>\r\n                    <Button className=\"float-left mb-3 ml-3\" href=\"/history\">History</Button>\r\n                    <DisplayTable\r\n                        handle_buy={this.handle_buy}\r\n                        handle_delete={this.handle_delete}\r\n                        handle_sell={this.handle_sell}\r\n                        table_data={this.state.table_data}\r\n                        handle_change_buy_price={this.handle_change_buy_price}\r\n                        handle_change_buy_count={this.handle_change_buy_count}\r\n                        handle_change_sell={this.handle_change_sell}>\r\n                    </DisplayTable>\r\n                    <div className=\"text-right\"><h4>Returns : {this.state.returns}</h4></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\nimport { Table } from 'reactstrap'\n\n\nfunction DisplayHistory(props) {\n    var history = props.history;\n    return (\n        <Table>\n            <thead>\n                <tr>\n                    <th>Ticker Symbol</th>\n                    <th>Price</th>\n                    <th>Shares</th>\n                    <th>Sell/Buy</th>\n                </tr>\n            </thead>\n            <tbody>\n                {history.map((anObjectMapped, index) => {\n                    return (\n                        <tr key={index}>\n                            <th scope=\"row\">{anObjectMapped.TickerSymbol}</th>\n                            <td>{anObjectMapped.Price}</td>\n                            <td>{anObjectMapped.Shares}</td>\n                            <td>{anObjectMapped.TradeType}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default DisplayHistory\n","import React, {Component} from 'react'\nimport {Row, Col} from 'reactstrap'\n\nexport class PageChoose extends Component {\n\n    render() {\n        var pagelist = this.props.pagelist,\n            currentPage = this.props.currentPage,\n            onPageChoose = this.props.handlePageChange;\n\n        return (\n            <Row>\n                <Col>\n                    <div className=\"pagination\">\n                        <button onClick={(e)=> onPageChoose(e,0)} >&laquo;</button>\n                        {pagelist.map((anObjectMapped, index) => {\n                            return (\n                                <button key={index} className = {index+1 === currentPage ? \"active\" : \"\"} onClick={(e)=> onPageChoose(e,index)} >{index+1}</button>\n                            );\n                        })}\n                        <button onClick={(e)=> onPageChoose(e,pagelist.length-1)}>&raquo;</button>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default PageChoose\n","import React, { Component } from 'react'\nimport { Button } from 'reactstrap'\nimport DisplayHistory from \"./DisplayHistory\"\nimport Header from \"./Header\"\nimport axios from \"axios\"\nimport PageChoose from './PageChoose'\nconst config = require(\"../config\");\n\n\nexport class History extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            credits : 0,\n            name : \"\",\n            currentPage : 1,\n            limit: 10,\n            _isloading : false,\n            totalPage : 1,\n            pagelist : [],\n            history : []\n        }\n    }\n\n    fetchData = () => {\n        console.log(\"Fetching history\")\n        this.fetchPage(this.state.currentPage)\n        axios.get(config.URL + '/api/credits')\n            .then(response => {\n                this.setState(prevState => ({\n                    credits: response.data.Credit,\n                    name : response.data.Name\n                }))\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getPageCount = () => {\n        axios.get(config.URL + '/api/getHistoryCount')\n            .then(response => {\n                var arr = [];\n                for(var i=0; i<Math.ceil(response.data/this.state.limit); i++){\n                    arr.push(i);\n                }\n                // console.log(arr)\n                this.setState(prevState => ({\n                    totalPage: Math.ceil(response.data/this.state.limit),\n                    pagelist: arr\n                }))\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    fetchPage = (index) =>{\n        axios.get(config.URL + '/api/history?pageNo='+index+'&size='+this.state.limit)\n            .then(response => {\n                let arr = [...response.data];\n                console.log(arr)\n                this.setState({\n                    history: arr\n                })\n                this.setState({\n                    _isloading:false\n                })\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    handlePageChange = (event,index) => {\n        this.setState({\n            _isloading:true\n        })\n        this.setState({\n            currentPage : index+1\n        })\n        console.log(this.state.currentPage);\n        this.fetchPage(index+1);\n    }\n\n    componentDidMount() {\n        this.fetchData();\n        this.getPageCount();\n    }\n\n    render() {\n        return (\n            <div>\n                <Header name={this.state.name} credits={this.state.credits}></Header>\n                <div className=\"m-5\">\n                    <Button className=\"float-left mb-3\" href=\"/Add\">Add</Button>\n                    <Button className=\"float-left mb-3 ml-3\" href=\"/\">Home</Button>\n                    {this._isloading?\"Please wait...\" : <DisplayHistory\n                        history={this.state.history}>\n                    </DisplayHistory>}\n                    <PageChoose pagelist = {this.state.pagelist}\n                                currentPage = {this.state.currentPage}\n                                handlePageChange = {this.handlePageChange}></PageChoose>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default History\n","import React, {Component} from 'react';\nimport './App.css';\nimport Add from \"./components/Add\"\nimport Profile from \"./components/Profile\"\nimport History from \"./components/History\"\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nexport class App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n            <Route path=\"/\" exact render = {()=><Profile></Profile>} />\n            <Route path=\"/Add\" component={ Add } />\n            <Route path=\"/history\" render = {()=><History></History>} />\n            <Redirect to=\"/\" />\n          </Switch>  \n  \n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}